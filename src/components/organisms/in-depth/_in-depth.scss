/*
In Depth
This is used to show additional information that is related to the content in the chapter but not necessary to show the user. This content is often shareable, fun, digestible "Did you know?" type content.
Markup: in-depth.html.twig
Styleguide COMPONENTS.in-depth
*/

%in-depth {
  display: flex;
  align-items: center;
  height: 100vh;

  @include breakpoint(medium) {
    padding: 0;
  }

  .in-depth__intro {
    width: 100%;
    min-height: auto !important;
  }

  .in-depth__image {
    img {
      border-radius: 1000rem;
      overflow: hidden;
    }
  }

  .in-depth__title {
    @extend h1;
    font-size: 2rem;
    font-weight: bold;

    @include breakpoint(medium) {
      font-size: 3rem;
      margin-bottom: 2rem;
    }

    @include breakpoint(large) {
      font-size: 4rem;
      margin-bottom: 4rem;
    }
  }

  .in-depth__left-col {
    position: relative;
    z-index: 5;
  }

  .in-depth__right-col {
    position: relative;
    z-index: 10;
    transform: translate(0, -4rem);
    padding: 0 2rem;

    @include breakpoint(medium) {
      padding: 0;
      display: flex;
      flex-flow: column;
      align-items: center;
      justify-content: center;
      transform: translate(-2rem, 0);
    }

    @include breakpoint(large) {
      transform: translate(-4rem, 0);
    }

    @include breakpoint(xlarge) {
      transform: translate(-6rem, 0);
    }

    @include breakpoint(xxlarge) {
      transform: translate(-8rem, 0);
    }
  }

  // Theme overrides.
  .theme--dark &,
  &.theme--dark {
    .in-depth__title {
      color: $white;
    }
  }
}

%in-depth-modal {
  .in-depth__toggle {
    @extend %modal__close-button;
    transition-property: visibility, opacity;
    transition-duration: .25s;
    transition-timing-function: ease-in-out;
    visibility: hidden;
    opacity: 0;
    margin-top: 5rem;
    border-color: $black !important;
    color: $black !important;
    background-color: rgba($white, 0.25) !important;

    @include breakpoint(small only) {
      position: absolute;
    }

    @include breakpoint(medium) {
      margin-top: 5rem;
      margin-right: 0;
    }
  }

  .horizontal-image-slider {
    @extend %horizontal-image-slider;
    height: auto;
    min-height: 100vh;
    padding: 0;
    background: transparent;

    @include breakpoint(medium) {
      height: 100vh;
    }

    .owl-stage-outer {
      @include breakpoint(medium) {
        padding: 0;
      }
    }

    .item:not(:first-of-type) {
      display: none;
      opacity: 0;
      visibility: hidden;
    }

    .item__content {
      margin: 2rem 0;

      @include breakpoint(medium) {
        margin: 0;
        display: flex !important;
        flex-flow: row nowrap !important;;
        align-items: center !important;;

        > * {
          flex-grow: 1;
        }
      }

      > .picture {
        width: 100% !important;

        @include breakpoint(medium) {
          flex-basis: 75%;
          height: 100vh;
          min-height: 100vh;
          width: auto !important;
          position: relative;

          &:before {
            position: absolute;
            top: 0;
            right: 0;
            width: calc(100% / 3);
            height: 100%;
            content: '';
            background: linear-gradient(to right, transparent, $white);
            z-index: 9;
          }
        }

        img {
          @extend %object-fit;

          @include breakpoint(small down) {
            position: relative;
            height: auto;
            width: 100%;
            object-fit: initial !important;
            background-size: initial !important;
          }

          @include breakpoint(medium) {
            max-height: 100vh;
            min-height: 100vh;
          }
        }
      }
    }

    .caption {
      color: $black;
      position: relative;

      @include breakpoint(medium) {
        flex-basis: 25%;
        position: relative;
        margin: 4rem 12rem;
      }

      .toggle-caption {
        border-color: $black;
        color: $black;
      }

      figcaption {
        color: $black;
      }
    }

    .caption__brief {
      @extend .lead;

      @include breakpoint(small down) {
        font-size: $base-font-size !important;
      }
    }

    .owl-nav {
      button {
        top: calc(50% - 1.25rem);
        color: transparent !important;
        background-image: url("../assets/images/slide__icon--next.svg") !important;
        background-size: contain !important;
        background-repeat: no-repeat !important;

        @supports (mask-image: none) or (-webkit-mask-image: none) {
          background: $black !important;
          -webkit-mask-image: url('../assets/images/slide__icon--next.svg');
          mask-image: url('../assets/images/slide__icon--next.svg');
          -webkit-mask-position: center center;
          mask-position: center center;
          -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
          -webkit-mask-size: cover;
          mask-size: cover;
        }

        &:hover {
          background-color: transparent !important;
          background-image: url("../assets/images/slide__icon--next.svg");
          background-size: contain;
          background-repeat: no-repeat;
          color: transparent;

          @supports (mask-image: none) or (-webkit-mask-image: none) {
            background: $black !important;
            -webkit-mask-image: url('../assets/images/slide__icon--next.svg');
            mask-image: url('../assets/images/slide__icon--next.svg');
            -webkit-mask-position: center center;
            mask-position: center center;
            -webkit-mask-repeat: no-repeat;
            mask-repeat: no-repeat;
            -webkit-mask-size: cover;
            mask-size: cover;
          }
        }
      }
    }

    .owl-dot {
      color: rgba($black, .5) !important;

      &.active {
        color: $black !important;
      }
    }

    .owl-dots,
    .owl-nav {
      @include breakpoint(large) {
        transition-property: visibility, opacity;
        transition-duration: .25s;
        transition-timing-function: ease-in-out;
        opacity: 0;
        visibility: hidden;
      }
    }
  }

  // Style overrides when the in depth slider is open.
  &.open {
    .in-depth__toggle {
      visibility: visible;
      opacity: 1;
    }

    .horizontal-image-slider {
      .owl-dots,
      .owl-nav {
        visibility: visible;
        opacity: 1;
      }

      .item:not(first-of-type) {
        display: block;
        opacity: 1;
        visibility: visible;
      }
    }
  }

  // Theme overrides.
  .theme--dark &,
  &.theme--dark {
    .in-depth__toggle {
      border-color: $white !important;
      color: $white !important;
      background-color: rgba($black, 0.25) !important;
    }

    .owl-dot {
      color: rgba($white, .5) !important;

      &.active {
        color: $white !important;
      }
    }

    .owl-nav {
      button {
        @supports (mask-image: none) or (-webkit-mask-image: none) {
          background: $white !important;
        }

        &:hover {
          @supports (mask-image: none) or (-webkit-mask-image: none) {
            background: $white !important;
          }
        }
      }
    }

    .caption {
      color: $white;

      .toggle-caption {
        border-color: $white;
        color: $white;
      }

      figcaption {
        color: $white;
      }
    }

    .horizontal-image-slider {
      .item__content {
        > .picture:before {
          @include breakpoint(medium) {
            background: linear-gradient(to right, transparent, $black);
          }
        }
      }
    }
  }
}

.in-depth {
  @extend %in-depth;
}

.in-depth-slider,
.in-depth-modal {
  @extend %in-depth-modal;
}
