%CoverPage {

  $bgURL: $klimtRodinCoverBg;
  .la-prose & {
    $bgURL: $laProseCoverBg;
  }

  position: absolute;
  @extend %fill_screen;
  overflow: hidden;

  .underlay {
    @extend %performy;
    @extend %abs;
    @extend %fill_screen;

    .bg-image {
      @extend %object-fit;
      z-index: -1;
    }
    .underlay_contents {
      z-index: 2;
      position: relative;
      @extend %fill_screen;
    }
    .headline {
      color: transparent;
      .solid {
        color: #fff;
      }
      .outline {
        // this is where anny progressive ennhancement for IE will go.
        @supports(-webkit-text-stroke: 3px #fff) {
          color: rgba(#f00, 0);
          -webkit-text-stroke: 2px #fff;
        }
      }
    }
    .content {
      color: #fff;
      text-align: center;
      width: 100%;
      padding-bottom: 3em;
      position: absolute;
      bottom: 5rem;
      .info {
        transition-property: top, opacity;
        transition-timing-function: ease-in-out;
        transition-duration: 0.675s;
        opacity: 0;
        position: relative;
        top: 4em;
      }
    }
  }

  .triggered & {
    .underlay {
      .content {
        .info{
          opacity: 1;
          top: 0;
        }
      }
    }
  }

  .loaderpane {
    @extend %performy;
    @extend %fill_screen;
    position: absolute;
    top: 0;
    left: 0;
    .text {
      line-height: 0.75;
    }
  }

  .top {
    z-index: 10;
  }

  .loader {
    z-index:11;
    clip: rect(0 100vw 100vh 0);
    .text {
      color: #dedede;
    }
  }

  .bg-image {
    @extend %object-fit;
    animation: kenburns--cover 4s ease-out 0.75s 1 forwards running;
  }

  .mask {
    color: red;
    -webkit-text-fill-color: transparent;
    // we can set this as data attribute and bring up as svg
    background-image: url($bgURL) no-repeat;
    background-position: center center;
    background-attachment: fixed;
    background-size: cover;
    -webkit-background-clip: text;
  }

  /*
   * This style will be shared with the SVG because
   * I have to replace the DOM element in Firefox.
   * Otherwise the SVG pattern will be broken.
   */
  .headline {
    display: block;
    position: absolute;
    width: 100vw;
    top: 40%;
    left: 50%;
    transform: translate3d(-50%, -40%, 0);
    margin: 0;
    font-family: 'akzidenz-grotesk-next-pro', sans-serif;
    font-weight: bold;
    font-size: 80px;
    line-height: 100%;
    @include breakpoint(medium) {
      width: 80vw;
      font-size: 122px;
    }
    @include breakpoint(large) {
      font-size: 150px;
    }
    letter-spacing: 2px;
    text-align: center;
  }

  .subtitle {
    top: 50%;
    // transform: translateY(30%);
    position: absolute;
    color: #fff;
    width: 100%;
    text-align: center;
    font-style: italic;
    font-size: 32px;
    @include breakpoint(medium) {
      font-size: 42px;
    }
    @include breakpoint(large) {
      font-size: 50px;
    }

  }

  .cover_loader_container {
    @extend %fill_screen;
    background-color: #fff;
    position: relative;
    z-index: 3;
    transition-property: opacity;
    transition-timing-function: ease-out;
    transition-duration: 0.7s
  }

  &.loaded {
    .loader {
      animation-name: stretch;
      animation-duration: 1.25s;
      animation-timing-function: ease-out;
      animation-direction: normal;
      animation-delay: 0s;
      animation-iteration-count: 1;
      animation-fill-mode: forwards;
    }
  }

  &.post_loaded {
    .cover_loader_container {
      opacity: 0;
    }
  }

  &.initialized {
    .underlay {
      z-index: 100;
    }
    .cover_loader_container,
    .mask_loader {
      display: none;
    }
  }

  // Menu cover page style overrides.
  .off-canvas & {
    position: relative;
    min-height: auto;

    .underlay {
      position: relative;
      min-height: auto;

      .underlay_contents {
        padding: 2rem 2rem 1rem 2rem;
        min-height: auto;
      }

      .headline {
        font-size: 3rem;
        position: relative;
        left: 50%;
        transform: translate3d(-50%, 0%, 0);
      }
    }
  }
}

.cover_page {
  @extend %CoverPage;
}

@keyframes stretch {
  0% {
    clip: rect(0 100vw 100vh 0);
  }
  100% {
    clip: rect(0 100vw 100vh 100vw);
  }
}

@keyframes kenburns--cover {
  0% {
    transform: scale(1);
  }
  100% {
    left: 15%;
    top: -17%;
    transform: scale(1.5);
  }
}
